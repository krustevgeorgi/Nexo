{"ast":null,"code":"var _jsxFileName = \"/Users/georgikrastev/Desktop/Nexo_Explorer/Nexo/src/components/DashboardRow/DashboardRow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './styles.scss';\nimport { FileCopy } from \"@material-ui/icons\";\nimport { ArrowForward } from \"@material-ui/icons\";\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardRow = _ref => {\n  _s();\n  let {\n    title,\n    value,\n    noAnimation,\n    onGoClicked,\n    loading\n  } = _ref;\n  const [copied, setCopied] = useState(false);\n  const copyValue = () => {\n    if (typeof value !== 'string') return;\n    navigator.clipboard.writeText(value);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-row ${noAnimation ? '' : 'animate'}`,\n    onClick: copyValue,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), typeof value === 'string' && !onGoClicked && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: copied ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(FileCopy, {\n        className: \"copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 55\n      }, this)\n    }, void 0, false), onGoClicked && /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading,\n      className: \"goBtn\",\n      onClick: onGoClicked,\n      children: loading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(ArrowForward, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardRow, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n_c = DashboardRow;\nexport default DashboardRow;\nvar _c;\n$RefreshReg$(_c, \"DashboardRow\");","map":{"version":3,"names":["React","useState","FileCopy","ArrowForward","ClipLoader","DashboardRow","title","value","noAnimation","onGoClicked","loading","copied","setCopied","copyValue","navigator","clipboard","writeText","setTimeout"],"sources":["/Users/georgikrastev/Desktop/Nexo_Explorer/Nexo/src/components/DashboardRow/DashboardRow.tsx"],"sourcesContent":["import React, {FC, ReactNode, useState} from \"react\";\nimport './styles.scss';\nimport {FileCopy} from \"@material-ui/icons\";\nimport {ArrowForward} from \"@material-ui/icons\";\nimport {ClipLoader} from 'react-spinners'\n\ninterface Props {\n    title: string;\n    value: string | ReactNode;\n    noAnimation?: boolean;\n    onGoClicked?: () => void;\n    loading?: boolean;\n}\n\nconst DashboardRow: FC<Props> = ({title, value, noAnimation, onGoClicked, loading}) => {\n    const [copied, setCopied] = useState(false)\n\n    const copyValue = () => {\n        if (typeof value !== 'string') return;\n\n        navigator.clipboard.writeText(value);\n        setCopied(true)\n        setTimeout(() => setCopied(false), 2000)\n    }\n\n    return (\n        <div className={`dashboard-row ${noAnimation ? '' : 'animate'}`} onClick={copyValue}>\n            <div>\n                <span className='title'>{title}</span>\n                <span className='value'>{value}</span>\n            </div>\n            {\n                (typeof value === 'string' && !onGoClicked)\n                && <>{copied ? <span>Copied!</span> : <FileCopy className='copy'/>}</>\n            }\n            {\n                onGoClicked &&\n                <button disabled={loading} className='goBtn' onClick={onGoClicked}>\n                    {loading ? <ClipLoader size={12}/> : <ArrowForward/>}\n                </button>\n            }\n        </div>\n    )\n}\nexport default DashboardRow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAkBC,QAAQ,QAAO,OAAO;AACpD,OAAO,eAAe;AACtB,SAAQC,QAAQ,QAAO,oBAAoB;AAC3C,SAAQC,YAAY,QAAO,oBAAoB;AAC/C,SAAQC,UAAU,QAAO,gBAAgB;AAAA;AAAA;AAUzC,MAAMC,YAAuB,GAAG,QAAuD;EAAA;EAAA,IAAtD;IAACC,KAAK;IAAEC,KAAK;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAO,CAAC;EAC9E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,SAAS,GAAG,MAAM;IACpB,IAAI,OAAON,KAAK,KAAK,QAAQ,EAAE;IAE/BO,SAAS,CAACC,SAAS,CAACC,SAAS,CAACT,KAAK,CAAC;IACpCK,SAAS,CAAC,IAAI,CAAC;IACfK,UAAU,CAAC,MAAML,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC5C,CAAC;EAED,oBACI;IAAK,SAAS,EAAG,iBAAgBJ,WAAW,GAAG,EAAE,GAAG,SAAU,EAAE;IAAC,OAAO,EAAEK,SAAU;IAAA,wBAChF;MAAA,wBACI;QAAM,SAAS,EAAC,OAAO;QAAA,UAAEP;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eACtC;QAAM,SAAS,EAAC,OAAO;QAAA,UAAEC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACpC,EAED,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACE,WAAW,iBACvC;MAAA,UAAGE,MAAM,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,gBAAG,QAAC,QAAQ;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAE,iBAAI,EAGtEF,WAAW,iBACX;MAAQ,QAAQ,EAAEC,OAAQ;MAAC,SAAS,EAAC,OAAO;MAAC,OAAO,EAAED,WAAY;MAAA,UAC7DC,OAAO,gBAAG,QAAC,UAAU;QAAC,IAAI,EAAE;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,gBAAG,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/C;EAAA;IAAA;IAAA;IAAA;EAAA,QAEX;AAEd,CAAC;AAAA,GA7BKL,YAAuB;AAAA,KAAvBA,YAAuB;AA8B7B,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}