{"ast":null,"code":"var _jsxFileName = \"/Users/georgikrastev/Desktop/Nexo_Explorer/Nexo/src/components/ConnectBox/ConnectBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './styles.scss';\nimport { ChevronRight, Info, CheckCircle } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setConnection, setProvider, setSigner } from \"../../store/common/actions\";\nimport { ClipLoader } from 'react-spinners';\nimport { useNavigate } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { WETH_ADDRESS, NEXO_ADDRESS } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MetaMaskLink = 'https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en';\nconst ConnectBox = () => {\n  _s();\n  const {\n    connection\n  } = useSelector(state => state.common);\n  const [connecting, setConnecting] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const connectAccount = async () => {\n    setConnecting(true);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send('eth_requestAccounts', []);\n    const signer = await provider.getSigner();\n    const connection = {\n      address: await signer.getAddress(),\n      network: (await provider.getNetwork()).name,\n      ethBalance: await signer.getBalance(),\n      wethBalance: await provider.getBalance(WETH_ADDRESS),\n      nexoBalance: await provider.getBalance(NEXO_ADDRESS)\n    };\n    console.log(typeof provider);\n    dispatch(setConnection(connection));\n    dispatch(setProvider(provider));\n    dispatch(setSigner(signer));\n    setConnecting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"call-to-action\",\n    children: [!connection ? /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(CheckCircle, {\n      className: \"check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: !connection ? 'Start by connection your MetaMask wallet' : 'You are connected to your MetaMask wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: !connection ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Make sure you have MetaMask installed, you can get the free browser extension \", /*#__PURE__*/_jsxDEV(\"a\", {\n          rel: \"noreferrer\",\n          target: \"_blank\",\n          href: MetaMaskLink,\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 107\n        }, this), \".\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"To check your balance and manage your wallet go to the\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => navigate('/dashboard'),\n          children: \"nexo dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n      visible: !connection && window.ethereum,\n      connecting: connecting,\n      onClick: connectAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ConnectBox, \"Ag97BKEZJsP2SFOplvBosVnAuF8=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = ConnectBox;\nconst ConnectButton = _ref => {\n  let {\n    visible,\n    connecting,\n    onClick\n  } = _ref;\n  if (!visible) return null;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: connecting,\n    onClick: onClick,\n    children: connecting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Connecting \\xA0\", /*#__PURE__*/_jsxDEV(ClipLoader, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Connect \", /*#__PURE__*/_jsxDEV(ChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ConnectButton;\nexport default ConnectBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConnectBox\");\n$RefreshReg$(_c2, \"ConnectButton\");","map":{"version":3,"names":["React","useState","ChevronRight","Info","CheckCircle","useDispatch","useSelector","setConnection","setProvider","setSigner","ClipLoader","useNavigate","ethers","WETH_ADDRESS","NEXO_ADDRESS","MetaMaskLink","ConnectBox","connection","state","common","connecting","setConnecting","dispatch","navigate","connectAccount","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","address","getAddress","network","getNetwork","name","ethBalance","getBalance","wethBalance","nexoBalance","console","log","ConnectButton","visible","onClick"],"sources":["/Users/georgikrastev/Desktop/Nexo_Explorer/Nexo/src/components/ConnectBox/ConnectBox.tsx"],"sourcesContent":["import React, {FC, useState} from \"react\";\nimport './styles.scss';\nimport {ChevronRight, Info, CheckCircle} from \"@material-ui/icons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {State} from \"../../store\";\nimport {setConnection, setProvider, setSigner} from \"../../store/common/actions\";\nimport {ClipLoader} from 'react-spinners'\nimport {useNavigate} from \"react-router-dom\";\nimport {ethers, BigNumber} from \"ethers\";\nimport {Connection as ConnectionType} from '../../models'\nimport {WETH_ADDRESS, NEXO_ADDRESS} from \"../../constants\";\n\nconst MetaMaskLink = 'https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en';\n\n\n\ninterface Props {\n\n}\n\nconst ConnectBox: FC<Props> = () => {\n    const {connection} = useSelector((state: State) => state.common)\n    const [connecting, setConnecting] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const connectAccount = async () => {\n        setConnecting(true)\n\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        await provider.send('eth_requestAccounts', [])\n        const signer = await provider.getSigner()\n\n\n        const connection: ConnectionType = {\n            address: await signer.getAddress(),\n            network: (await provider.getNetwork()).name,\n            ethBalance: await signer.getBalance(),\n            wethBalance: await provider.getBalance(WETH_ADDRESS),\n            nexoBalance: await provider.getBalance(NEXO_ADDRESS)\n        }\n\n        console.log(typeof provider)\n\n        dispatch(setConnection(connection))\n        dispatch(setProvider(provider))\n        dispatch(setSigner(signer))\n\n        setConnecting(false)\n\n    }\n\n    return (\n        <div id='call-to-action'>\n            {/* icon */}\n            {!connection ? <Info/> : <CheckCircle className='check'/>}\n\n            {/* title */}\n            <p className='title'>\n                {\n                    !connection\n                        ? 'Start by connection your MetaMask wallet'\n                        : 'You are connected to your MetaMask wallet'\n                }\n            </p>\n\n            {/* text */}\n            <p className='instructions'>\n                {\n                    !connection\n                        ? <>Make sure you have MetaMask installed, you can get the free browser extension <a\n                            rel=\"noreferrer\" target='_blank' href={MetaMaskLink}>here</a>.</>\n                        : <>To check your balance and manage your wallet go to the&nbsp;\n                            <span onClick={() => navigate('/dashboard')}>nexo dashboard</span></>\n                }\n            </p>\n\n            {/* call to action*/}\n            <ConnectButton visible={!connection && window.ethereum} connecting={connecting}\n                           onClick={connectAccount}/>\n        </div>\n    )\n}\n\ninterface ConnectButtonProps {\n    visible: boolean;\n    connecting: boolean;\n    onClick: () => void;\n}\n\nconst ConnectButton: FC<ConnectButtonProps> = ({visible, connecting, onClick}) => {\n    if (!visible) return null;\n\n    return (\n        <button disabled={connecting} onClick={onClick}>\n            {\n                connecting\n                    ? <>Connecting &nbsp;<ClipLoader size={12}/></>\n                    : <>Connect <ChevronRight/></>\n            }\n        </button>\n    )\n}\n\nexport default ConnectBox;"],"mappings":"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"},"metadata":{},"sourceType":"module"}